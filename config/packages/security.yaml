security:
    encoders:
        App\Entity\AppUser:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [app_user_provider, app_ldap_user_provider]

        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            id: App\Security\LocalUserProvider
#            entity:
#                class: App\Entity\AppUser
#                property: username

        app_ldap_user_provider:
            id: App\Security\OptionalLdapUserProvider
            # This configuration applies to the default LdapUserProvider, leaving here as a reference
#            service: Symfony\Component\Ldap\Ldap
#            base_dn: '%env(LDAP_AUTH_BASE_DN)%'
#            search_dn: '%env(LDAP_AUTH_SEARCH_DN)%'
#            search_password: '%env(LDAP_AUTH_SEARCH_PASSWORD)%'
#            default_roles: ROLE_USER

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: chain_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Must be authenticated as someone to access the system
        - { path: ^/, roles: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    # See also AppPermissions::AVAILABLE_ROLES
    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_ALLOWED_TO_SWITCH
            - ROLE_PARTICIPANT_GROUP_EDIT
        ROLE_PARTICIPANT_GROUP_EDIT:
            - ROLE_PARTICIPANT_GROUP_VIEW
