# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

imports:
    # Build process writes version information to this file
    # Active version number is stored in the app_current_version parameter
    - { resource: version.yaml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    default_ldap_host: ~
    default_ldap_port: 389
    default_ldap_encryption: none
    default_ldap_protocol_version: 3
    default_ldap_referrals: false
    default_ldap_auth_base_dn: ''
    default_ldap_auth_search_dn: ''
    default_ldap_auth_search_password: ''
    default_ldap_auth_user_dn_format: ''

    # Default values for environment variables
    env(CT_USER_SUPPORT_EMAIL): ''
    env(CT_USER_SUPPORT_HTML): ''

    # Allow Symfony router to generate correct URLs in Command classes
    router.request_context.host: '%env(APP_HOST)%'
    router.request_context.base_url: '%env(APP_BASE_URL)%'
    asset.request_context.base_path: '%router.request_context.base_url%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # For loading fixtures see:
    #     dev environment -- config/packages/dev/services.yaml
    #     test environment -- config/packages/test/services.yaml
    App\:
        resource: '../src/*'
        exclude: '../src/{DataFixtures,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Email\EmailBuilder:
        arguments:
            $fromAddress: '%env(CT_DEFAULT_FROM_ADDRESS)%'
            $replyToAddress: '%env(CT_DEFAULT_REPLY_TO_ADDRESS)%'
            $indicateIsTestingEmail: '%env(bool:CT_SEND_TEST_EMAILS)%'

    App\Security\LoginFormAuthenticator:
        arguments:
            $ldapAuthUserDnFormat: '%env(default:default_ldap_auth_user_dn_format:LDAP_AUTH_USER_DN_FORMAT)%'

    App\Security\OptionalLdapUserProvider:
        arguments:
            Symfony\Component\Ldap\LdapInterface: '@Symfony\Component\Ldap\Ldap'
            $baseDn: '%env(default:default_ldap_auth_base_dn:LDAP_AUTH_BASE_DN)%'
            $searchDn: '%env(default:default_ldap_auth_search_dn:LDAP_AUTH_SEARCH_DN)%'
            $searchPassword: '%env(default:default_ldap_auth_search_password:LDAP_AUTH_SEARCH_PASSWORD)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Symfony\Component\Ldap\Ldap:
        arguments: ['@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter']

    Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
        arguments:
            - host: '%env(default:default_ldap_host:LDAP_HOST)%'
              port: '%env(default:default_ldap_port:int:LDAP_PORT)%'
              # Valid values are: none, ssl, tls
              encryption: '%env(default:default_ldap_encryption:int:LDAP_ENCRYPTION)%'
              options:
                  protocol_version: '%env(default:default_ldap_protocol_version:int:LDAP_PROTOCOL_VERSION)%'
                  referrals: '%env(default:default_ldap_referrals:bool:LDAP_REFERRALS)%'

    # Label Printing service
    App\Label\ZplPrinting:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '%env(LABEL_PRINTER_TYPE)%'
            - '%kernel.cache_dir%/label-images/'
            - '@router'

    # ServiceNow API Connection
    App\Api\ServiceNow\HttpClient:
        arguments:
            # $options array
            - url: '%env(SERVICENOW_URL)%'
              username: '%env(SERVICENOW_USERNAME)%'
              password: '%env(SERVICENOW_PASSWORD)%'
