{% macro activeClass(path) %}
    {% set currentUrl = path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')) %}
    {% set checkUrl = path(path) %}
    {% if currentUrl == checkUrl %}active{% endif %}
{% endmacro %}

{#
Renders a top-level navigation node in the tree navigation.

@param parentText (string) Top-level navigation item's text
@param parentIconClass (string) CSS class for Font Awesome class icon (i.e. fa-list)
@param children (array) Array of hashes. See childrenItem params below.
@param childrenItem.text (string) Navigation link text
@param childrenItem.iconClass (string) CSS classes for Font Awesome icon next to nav item (i.e. fa-list)
@param childrenItem.route (string) Name of Controller route linked to
@param mustHaveOnePermissionToView (array) Optional. Array of strings. User must have one or more of these roles to view.
#}
{% macro treenode(parentText, parentIconClass, children, mustHaveOneRoleToView) %}
    {% set canView = true %}
    {% if mustHaveOneRoleToView|length > 0 %}
        {% set canView = false %}
        {% for requiredRole in mustHaveOneRoleToView %}
            {% if not canView and is_granted(requiredRole) %}
                {% set canView = true %}
            {% endif %}
        {% endfor %}
    {% endif %}

    {% if canView %}
    <li class="treeview {% for child in children %}{{ _self.activeClass(child.route) }}{% endfor %}">
        <a href="#">
            <i class="fa {{ parentIconClass }}"></i> <span>{{ parentText }}</span>
            <span class="pull-right-container">
            <i class="fa fa-angle-left pull-right"></i>
        </span>
        </a>
        <ul class="treeview-menu">
            {% for child in children %}
                {% set canViewChild = true %}
                {% if child.mustHaveOneRoleToView is defined %}
                    {% set canViewChild = false %}
                    {% for requiredRole in child.mustHaveOneRoleToView %}
                        {% if not canViewChild and is_granted(requiredRole) %}
                            {% set canViewChild = true %}
                        {% endif %}
                    {% endfor %}
                {% endif %}

                {% if canViewChild %}
                    <li class="{{ _self.activeClass(child.route) }}"><a href="{{ path(child.route) }}"><i class="fa {{ child.iconClass }}"></i> {{ child.text }}</a></li>
                {% endif %}
            {% endfor %}
        </ul>
    </li>
    {% endif %}
{% endmacro %}
<!-- sidebar: style can be found in sidebar.less -->
<section class="sidebar">
    <!-- sidebar menu: : style can be found in sidebar.less -->
    <ul class="sidebar-menu" data-widget="tree" data-animation-speed="150" data-accordion="false">
        {{
            _self.treenode('Participant Groups', 'fa-users', [
                {
                    text: 'List',
                    iconClass: 'fa-list',
                    route: 'app_participant_group_list'
                },
                {
                    text: 'New',
                    iconClass: 'fa-plus',
                    route: 'app_participant_group_new'
                },
                {
                    text: 'Import',
                    iconClass: 'fa-upload',
                    route: 'group_excel_import'
                },
            ], ['ROLE_PARTICIPANT_GROUP_EDIT', 'ROLE_PARTICIPANT_GROUP_VIEW'])
        }}
        {{
            _self.treenode('Tubes', 'fa-vial', [
                {
                    text: 'List',
                    iconClass: 'fa-list',
                    route: 'app_tube_list'
                },
                {
                    text: 'Print New Labels',
                    iconClass: 'fa-print',
                    route: 'app_label_printer_print_tube_labels'
                },
                {
                    text: 'Import Pre-labeled Tubes',
                    iconClass: 'fa-upload',
                    route: 'tube_excel_import'
                },
            ], ['ROLE_PRINT_TUBE_LABELS'])
        }}
        {{
            _self.treenode('Specimens', 'fa-flask', [
                {
                    text: 'List',
                    iconClass: 'fa-list',
                    route: 'app_specimen_list'
                },
                {
                    text: 'New',
                    iconClass: 'fa-plus',
                    route: 'app_specimen_new'
                },
            ], ['ROLE_SPECIMEN_EDIT'])
        }}
        {{
            _self.treenode('Check-In', 'fa-clipboard-check', [
                {
                    text: 'Queue',
                    iconClass: 'fa-list',
                    route: 'checkin_queue'
                },
                {
                    text: 'Import Accepted/Rejected',
                    iconClass: 'fa-upload',
                    route: 'checkin_import_start'
                },
            ], ['ROLE_TUBE_CHECK_IN'])
        }}
        {{
            _self.treenode('Results', 'fa-th', [
                {
                    text: 'Tecan to Specimen IDs',
                    mustHaveOneRoleToView: ['ROLE_RESULTS_EDIT'],
                    iconClass: 'fa-recycle',
                    route: 'tecan_to_specimen_ids'
                },
                {
                    text: 'List',
                    mustHaveOneRoleToView: ['ROLE_RESULTS_VIEW'],
                    iconClass: 'fa-list',
                    route: 'app_results_qpcr_list'
                },
                {
                    text: 'Import',
                    mustHaveOneRoleToView: ['ROLE_RESULTS_EDIT'],
                    iconClass: 'fa-upload',
                    route: 'qpcr_excel_import'
                },
            ], ['ROLE_RESULTS_VIEW', 'ROLE_RESULTS_EDIT'])
        }}
        {{
            _self.treenode('Reports', 'fa-chart-bar', [
                {
                    text: 'Group Results',
                    mustHaveOneRoleToView: ['ROLE_REPORTS_GROUP_VIEW'],
                    iconClass: 'fa-list',
                    route: 'app_report_group_results'
                },
            ], ['ROLE_REPORTS_GROUP_VIEW'])
        }}
        {{
            _self.treenode('Label Printers', 'fa-print', [
                {
                    text: 'List',
                    iconClass: 'fa-list',
                    route: 'app_labelprinter_list'
                },
                {
                    text: 'Print Test Label',
                    iconClass: 'fa-plus',
                    route: 'app_labelprinter_testprint'
                },
            ], ['ROLE_ADMIN'])
        }}
        {{
            _self.treenode('Users', 'fa-users', [
                {
                    text: 'List',
                    iconClass: 'fa-list',
                    route: 'user_list'
                },
                {
                    text: 'Add User',
                    iconClass: 'fa-plus',
                    route: 'user_new'
                },
            ], ['ROLE_ADMIN'])
        }}
        {{
            _self.treenode('Kiosks', 'fa-tablet-alt', [
                {
                    text: 'Kiosk UI',
                    mustHaveOneRoleToView: ['ROLE_KIOSK_UI'],
                    iconClass: 'fa-barcode',
                    route: 'kiosk_index'
                },
                {
                    text: 'List',
                    mustHaveOneRoleToView: ['ROLE_ADMIN'],
                    iconClass: 'fa-list',
                    route: 'kiosk_admin_list'
                },
                {
                    text: 'New',
                    mustHaveOneRoleToView: ['ROLE_ADMIN'],
                    iconClass: 'fa-plus',
                    route: 'kiosk_admin_new'
                },
            ], ['ROLE_KIOSK_UI', 'ROLE_ADMIN'])
        }}
    </ul>
</section>
