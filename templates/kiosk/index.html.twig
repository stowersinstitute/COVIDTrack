{% extends 'kiosk/kiosk-base.html.twig' %}
{#
todo: ios doesn't allow playing audio until the user has interacted with the page somehow
    If we want to enable a "successful scan" beep we'll need to:
        - have some kind of "start scanning" button for a kiosk admin to click
        - use ajax calls so we never leave the page (since that would reset the permission)
#}

{% block page_title %}COVIDTrack Kiosk{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-md-12">
            <table class="table large" style="font-size: 2.5em;">
                <thead class="thead-dark">
                <tr>
                    <th>Group ID</th>
                    <th>Tube ID</th>
                </tr>
                </thead>

                <tr>
                    <td><span id="groupId"><i class="fa fa-spinner fa-spin"></i> Looking for barcode...</span></td>
                    <td><span id="specimenId"><i class="fa fa-spinner fa-spin"></i> Looking for barcode...</span></td>
                </tr>
            </table>
            {{ form(form) }}


        <input type="text" id="raw-scanner" name="raw-scanner" style="opacity: 0.1; width:10px;"/>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        function drawLine(canvas, begin, end, color) {
            canvas.beginPath();
            canvas.moveTo(begin.x, begin.y);
            canvas.lineTo(end.x, end.y);
            canvas.lineWidth = 4;
            canvas.strokeStyle = color;
            canvas.stroke();
        }

        (function() {
            var waitingForGroupId = true;
            var waitingForSpecimenId = true;

            var groupId = null;
            var specimenId = null;

            function sawGroupId(sawGroupId) {
                if (!waitingForGroupId) return;

                groupId = sawGroupId;
                document.getElementById('groupId').innerHTML = '<i class="fa fa-check text-green"></i> ' + sawGroupId;
                notifySuccessfulScan();
                waitingForGroupId = false;

                checkForSubmit();
            }

            function sawSpecimenId(sawSpecimenId) {
                if (!waitingForSpecimenId) return;

                specimenId = sawSpecimenId;
                document.getElementById('specimenId').innerHTML = '<i class="fa fa-check text-green"></i> ' + sawSpecimenId;
                notifySuccessfulScan();
                waitingForSpecimenId = false;

                checkForSubmit();
            }

            function checkForSubmit() {
                if (!waitingForSpecimenId && !waitingForGroupId) {
                    location.href = "{{ path('kiosk_index') }}" + "specimen-dropoff/" + groupId + "/" + specimenId
                }
            }

            function notifySuccessfulScan() {
                console.log("ðŸ”” BEEP ðŸ””");
                document.getElementById("audioScanSuccess").muted = false;
                document.getElementById("audioScanSuccess").play();
            }

            // --------------------------- QR code processing stuff
            var video = document.createElement("video");
            var canvasElement = document.getElementById("canvas");
            var canvas = canvasElement.getContext("2d");
            var loadingMessage = document.getElementById("loadingMessage");
            var outputContainer = document.getElementById("output");
            var outputMessage = document.getElementById("outputMessage");
            var outputData = document.getElementById("outputData");

            var useFrontCamera = false;

            // Use facingMode: environment to attemt to get the front camera on phones
            navigator.mediaDevices
                .getUserMedia({
                    video: {
                        facingMode: useFrontCamera ? "user" : "environment",
                        width: 950,
                        height: 950
                    }
                })
                .then(function(stream) {
                        video.srcObject = stream;
                        video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
                        video.play();
                        requestAnimationFrame(tick);
                    }
                );

            function tick() {
                loadingMessage.innerText = "âŒ› Loading video...";
                if (video.readyState === video.HAVE_ENOUGH_DATA) {
                    loadingMessage.hidden = true;
                    canvasElement.hidden = false;
                    outputContainer.hidden = false;

                    canvasElement.height = video.videoHeight;
                    canvasElement.width = video.videoWidth;
                    canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
                    var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
                    var code = jsQR(imageData.data, imageData.width, imageData.height, {
                        inversionAttempts: "dontInvert",
                    });
                    if (code) {
                        drawLine(canvas, code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
                        drawLine(canvas, code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
                        drawLine(canvas, code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
                        drawLine(canvas, code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
                        outputMessage.hidden = true;
                        outputData.parentElement.hidden = false;
                        outputData.innerText = code.data;

                        var specimenPrefix = 'CID';
                        if (code.data.indexOf(specimenPrefix) === 0) {
                            // todo: only necessary if we have a hidden specimen prefix
                            //sawSpecimenId(code.data.substring(specimenPrefix.length));
                            sawSpecimenId(code.data);
                        }
                        if (code.data.indexOf("GID:") === 0) {
                            sawGroupId(code.data.substring(4));
                        }
                    } else {
                        outputMessage.hidden = false;
                        outputData.parentElement.hidden = true;
                    }
                }
                requestAnimationFrame(tick);
            }

        })();
    </script>

    <script>

    </script>
{% endblock %}