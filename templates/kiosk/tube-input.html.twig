{% macro renderCancelButton() %}
    <button type="button" class="btn btn-sm btn-danger" data-toggle="modal" data-target="#cancelDropOff">
        <i class="fa fa-fw fa-trash"></i>
        Cancel Drop Off
    </button>
{% endmacro %}

{% extends 'kiosk/kiosk-base.html.twig' %}

{% block page_title %}COVIDTrack Kiosk{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-md-12">
            <h3 style="margin-top:0; padding-bottom:10px; border-bottom:1px solid #ddd;"><strong>{{ kioskSession.participantGroup.title }} Group</strong></h3>

            {% block body_content %}

            {{ form_start(form) }}
            {{ form_errors(form) }}
                <div class="row" id="tube-input-group">
                    <div class="col-xs-12">
                        {{ form_row(form.accessionId, {
                            'label': false,
                            'attr': {'class': 'input-lg', 'placeholder': 'Scan Tube barcode using kiosk scanner'}
                        }) }}
                    </div>
                    <div id="tube-check-status" class="input-lg"></div>
                </div>
            <div class="callout callout-danger hidden" id="tube-error-callout">
                <h4>Tube ID Error</h4>
                <p></p>
            </div>

            <div id="tubeDetails" class="collapse">
                {{ form_row(form.tubeType) }}
                <div class="row">
                    <div class="col-xs-6">
                        {{ form_row(form.collectedAtDate) }}
                    </div>
                    <div class="col-xs-6">
                        {{ form_row(form.collectedAtTime) }}
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6 text-right">
                        {{ form_row(form.save) }}
                    </div>
                    <div class="col-xs-6">
                        {{ form_row(form.review) }}
                    </div>
                </div>

                <div class="row col-xs-12 text-center">
                    {{ _self.renderCancelButton() }}
                </div>
            </div>

            <div class="row" id="buttons-before-tube-entered">
                <div class="col-xs-6 text-right">
                    {{ _self.renderCancelButton() }}
                </div>
                <div class="col-xs-6">
                    <a href="{{ path('kiosk_review', {'id':kioskSession.id}) }}" class="btn btn-sm btn-success">
                        Continue <i class="fa fa-fw fa-chevron-right"></i>
                    </a>
                </div>
            </div>

            {{ form_end(form) }}

            {% endblock %}
        </div>
    </div>

    {% block scan_help %}
    {%  include 'kiosk/scan-help.html.twig' with {
        scanTipHtml: 'Scan Tube barcode<br>below the screen'
    } %}
    {% endblock %}


    <style type="text/css">
        #tube-input-group { position: relative; }
        #tube-check-status { position: absolute; right: 1rem; }
    </style>
{% endblock %}

{% block modal %}
    <div class="modal fade" id="cancelDropOff" tabindex="-1" role="dialog" aria-labelledby="cancelLabel" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-red">
                    <h4 class="modal-title text-center" id="cancelLabel"><i class="fa fa-exclamation-triangle"></i> Cancel Drop Off</h4>
                </div>
                <div class="modal-body" style="background-color:#fff !important;color:#111 !important; text-align:center;">
                    Are you sure you want to cancel this drop off?
                </div>
                <div class="modal-footer" style="background-color:#f6f6f6 !important;">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">
                        <i class="fa fa-chevron-left"></i> Go Back
                    </button>

                    <button id="confirm-cancel-dropoff" type="button" class="btn btn-danger pull-right">
                        Yes, cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        // What to do when scanner input
        $(document).on( "scannerinput", function(e, inputString) {
            // We don't want the scanner typing in the input field.
            $("[data-scanner-input]").blur();
            $("[data-scanner-input]").val(inputString).trigger('input');
        });

        $(document).ready(function(){
            // React when inputting Tube Label ID
            var _timeoutHandler = 0;

            $("#kiosk_add_tube_form_accessionId").on('input', function(e) {
                // Timeout handler will make sure the user is done typing before checking the tube id.
                if (_timeoutHandler) {
                    clearTimeout(_timeoutHandler);
                }
                _timeoutHandler = setTimeout(function () {

                    if($(e.target).val() !== "") {
                        setTubeInputStatus('LOADING');
                        showTubeDetails(false);

                        $.ajax('{{ path('kiosk_tube_available_check') }}', {
                            method: 'POST',
                            data: { accessionId: $(e.target).val() },

                            success: onAvailableCheckResponse,

                            // Unexpected errors like 500 server or network down
                            error: function(xhr, textStatus, error) {
                                console.log("error in response: " + textStatus + " " + error);
                            }
                        });
                    } else {
                        // Collapse form details
                        setTubeInputStatus();
                        showTubeDetails(false);
                    }
                }, 500);
            });

            /**
             * What to do when we get a tube check response from the server
             * @param data AJAX Response Data
             */
            function onAvailableCheckResponse(data) {
                if (data.isError) {
                    setTubeInputStatus('ERROR', data.message);
                    showTubeDetails(false);
                    return;
                }

                showTubeDetails(true);
                setTubeInputStatus('SUCCESS');
            }

            /**
             * Sets the icon in the tube input field and any error message in the callout below the input field
             * @param status Options: LOADING, ERROR, or SUCCESS
             * @param message Error message to show in the callout
             */
            function setTubeInputStatus(status = '', message = '') {
                var statusWrapper = $("#tube-check-status");

                statusWrapper.empty();
                $("#tube-error-callout").toggleClass('hidden', true);

                switch (status) {
                    case 'LOADING':
                        statusWrapper.append('<i class="fa fa-fw fa-virus fa-spin"></i>');
                        break;
                    case 'ERROR':
                        statusWrapper.append('<i class="fa fa-fw fa-times text-red"></i>');
                        $("#tube-error-callout").toggleClass('hidden', false);
                        $("#tube-error-callout p").html(message);
                        break;
                    case 'SUCCESS':
                        statusWrapper.append('<i class="fa fa-fw fa-check text-green"></i>');
                        break;
                }
            }

            /**
             * Shows (and hides) the tube details fields and handles display of the scanning hint and buttons
             * @param show
             */
            function showTubeDetails(show = true) {
                if (show) {
                    $("#tubeDetails").collapse('show');
                    $("#scanTip").hide();
                    $("#buttons-before-tube-entered").hide();
                } else {
                    $("#tubeDetails").collapse('hide');
                    $("#scanTip").show();
                    $("#buttons-before-tube-entered").show();
                }
            }

            // Confirming Cancel does POST to do real cancel
            $('#confirm-cancel-dropoff').on('click', function(e) {
                const url = "{{ path('kiosk_cancel', {id: kioskSession.id}) }}";
                $.post(url)
                    .fail(function(responseObj) {
                        // Error happened, show it
                        const response = responseObj.responseJSON;
                        const errorMsg = response.errorMsg;
                        if (errorMsg) {
                            alert(errorMsg);
                            return;
                        }
                        alert('Cannot Cancel Dropoff. Please use the top-right menu to Refresh the screen.');
                    })
                    .done(function(response) {
                        // Redirect to another screen
                        window.location = response.redirectToUrl;
                    });
            });
        });

    </script>
{% endblock %}